# coding: utf-8

"""
    MeshDB Data API

    Programmatic access to mesh core data, detailing our installs, members, etc.   To use an authorization token, use the \"Authorize\" button, and under \"tokenAuth\" enter `Token ` before the content of your token, like this: `Token xxxyyyyyzzz`  If you have username/password credentials (like those used on the admin UI) you can login via the admin UI or [DRF login page](/auth/login/?next=/api-docs/swagger/)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class Type75bEnum(str, Enum):
    """
    * `ap` - Ap * `gateway` - Gateway * `gpon` - Gpon * `convertor` - Convertor * `other` - Other * `ptp` - Ptp * `router` - Router * `server` - Server * `station` - Station * `switch` - Switch * `ups` - Ups * `wireless` - Wireless * `homeWiFi` - Homewifi * `wirelessDevice` - Wirelessdevice
    """

    """
    allowed enum values
    """
    AP = 'ap'
    GATEWAY = 'gateway'
    GPON = 'gpon'
    CONVERTOR = 'convertor'
    OTHER = 'other'
    PTP = 'ptp'
    ROUTER = 'router'
    SERVER = 'server'
    STATION = 'station'
    SWITCH = 'switch'
    UPS = 'ups'
    WIRELESS = 'wireless'
    HOMEWIFI = 'homeWiFi'
    WIRELESSDEVICE = 'wirelessDevice'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Type75bEnum from a JSON string"""
        return cls(json.loads(json_str))


